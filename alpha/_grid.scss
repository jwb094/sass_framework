@use "sass:math";
$grid_columns : 12;

/*
Container + Row
*/

.l-container{
    box-sizing: border-box;
    margin: 0 auto;
    padding: 0 20px;
    max-width: 1440px;
    width: 100%;
}

.l-row{
    // box-sizing: border-box;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    // margin-right: 0.5rem;
    // margin-left: 0.5rem;
}


.l-col{
    box-sizing: border-box;
    flex-grow: 0; 
    width: math.div(1 * 100%, $grid_columns);
    padding-right: 1.5rem;
    padding-left: 1.5rem;
}

/*
 Grid - Responsive sizes
*/


@for $i from 1 through $grid_columns {
    .l-col-#{$i}{
        box-sizing: border-box;
        flex-grow: 0; 
        width: math.div($i * 100%, $grid_columns);
        // padding-right: 1.5rem;
        // padding-left: 1.5rem;
        //flex-basis: ($i * 100%) / $grid_columns;
    }
}


@for $i from 1 through $grid_columns {
    .l-col-offset-#{$i}{
        box-sizing: border-box;
        flex-grow: 0; 
        margin-left: ($i * 100%) / $grid_columns;
    }
}
//Responsive Media Quries for columns
@each  $key,$value in $breakpoints {
        @media (min-width:$value) {
            @for $i from 1 through $grid_columns {
                .l-col-#{$i}-#{$key}{
                    box-sizing: border-box;
                    flex-grow: 0; 
                    width: ($i * 100%) / $grid_columns;
                }
    
                .l-col-offset-#{$i}-#{$key}{
                    box-sizing: border-box;
                    flex-grow: 0; 
                    margin-left: ($i * 100%) / $grid_columns;
                }
              }
            
        }

    }
